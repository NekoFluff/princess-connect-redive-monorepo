[{"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\index.tsx":"1","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\App.tsx":"3","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\BestAreaListContainer.tsx":"4","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\RefreshButton.tsx":"5","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterListContainer.tsx":"6","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\BestAreaCard.tsx":"7","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterCard.tsx":"8","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\api\\bestLocationsAPI.tsx":"9","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\api\\characterAPI.tsx":"10","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterItem.tsx":"11"},{"size":565,"mtime":1611528279909,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1611528279910,"results":"14","hashOfConfig":"13"},{"size":790,"mtime":1611539572414,"results":"15","hashOfConfig":"13"},{"size":1121,"mtime":1611539572416,"results":"16","hashOfConfig":"13"},{"size":247,"mtime":1611528279908,"results":"17","hashOfConfig":"13"},{"size":1369,"mtime":1611528279908,"results":"18","hashOfConfig":"13"},{"size":1160,"mtime":1611539572415,"results":"19","hashOfConfig":"13"},{"size":1140,"mtime":1611539572416,"results":"20","hashOfConfig":"13"},{"size":241,"mtime":1611539572414,"results":"21","hashOfConfig":"13"},{"size":700,"mtime":1611539572414,"results":"22","hashOfConfig":"13"},{"size":1122,"mtime":1611539572417,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"158zai7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\index.tsx",[],["50","51"],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\App.tsx",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\BestAreaListContainer.tsx",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\RefreshButton.tsx",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterListContainer.tsx",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\BestAreaCard.tsx",["52","53"],"import React from \"react\";\r\nimport { Card, Button, Container, Row, ListGroup, Col } from \"react-bootstrap\";\r\nimport { BestArea } from \"@pcr/shared\";\r\n\r\ntype BestAreaCardProps = {\r\n  bestArea: BestArea;\r\n};\r\n\r\nconst BestAreaCard: React.FC<BestAreaCardProps> = ({\r\n  bestArea = {} as BestArea,\r\n}) => {\r\n  return (\r\n    <Card className=\"mt-3 mb-3\">\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n      <Card.Body>\r\n        <Card.Title className=\"mb-3\">{bestArea.location}</Card.Title>\r\n        {/* <Card.Text> */}\r\n        <Container>\r\n          {bestArea.items.map((item) => {\r\n            const value = `${item.itemName} [${item.characterName}]`;\r\n            return (\r\n              <Row key={value} className=\"mt-1 mb-1\">\r\n                <Col>{value}</Col>\r\n                {/* <Col xs=\"auto\">\r\n                  <Button>{active ? \"Disable\" : \"Enable\"}</Button>\r\n                </Col> */}\r\n              </Row>\r\n            );\r\n          })}\r\n        </Container>\r\n        {/* </Card.Text> */}\r\n        {/* <Button variant=\"primary\">Go somewhere</Button> */}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BestAreaCard;\r\n","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterCard.tsx",["54","55","56","57"],"import React from \"react\";\r\nimport { Card, Button, Container, Row, ListGroup, Col } from \"react-bootstrap\";\r\nimport CharacterItem from \"./CharacterItem\";\r\nimport { ItemList } from \"@pcr/shared\";\r\n\r\ntype CharacterCardProps = {\r\n  name: string;\r\n  rankUpItems: ItemList;\r\n};\r\n\r\nconst CharacterCard: React.FC<CharacterCardProps> = ({\r\n  name = \"Character Name\",\r\n  rankUpItems = {},\r\n}) => {\r\n  return (\r\n    <Card className=\"mt-3 mb-3\">\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n      <Card.Body>\r\n        <Card.Title className=\"mb-3\">{name}</Card.Title>\r\n        {/* <Card.Text> */}\r\n        <Container>\r\n          {Object.entries(rankUpItems).map(([itemName, acquired]) => {\r\n            return (\r\n              <CharacterItem\r\n                key={itemName}\r\n                characterName={name}\r\n                itemName={itemName}\r\n                acquired={acquired}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n        {/* </Card.Text> */}\r\n        {/* <Button variant=\"primary\">Go somewhere</Button> */}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\api\\bestLocationsAPI.tsx",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\api\\characterAPI.tsx",[],"C:\\Users\\Alex\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterItem.tsx",["58","59","60"],"import { Card, Button, Container, Row, ListGroup, Col } from \"react-bootstrap\";\r\nimport { useCallback } from \"react\";\r\nimport { updateCharacterItem } from \"../api/characterAPI\";\r\n\r\nconst CharacterItem = ({\r\n  characterName = \"Character Name\",\r\n  acquired = true,\r\n  itemName = \"Item Name\",\r\n}) => {\r\n  const gotItClicked = useCallback(() => {\r\n    console.log(\"Got it clicked\");\r\n    updateCharacterItem(characterName, itemName, true);\r\n  }, [characterName, itemName]);\r\n\r\n  const undoClicked = useCallback(() => {\r\n    console.log(\"Undo clicked\");\r\n    updateCharacterItem(characterName, itemName, false);\r\n  }, [characterName, itemName]);\r\n\r\n  return (\r\n    <Row className=\"mt-1 mb-1\">\r\n      <Col>{itemName}</Col>\r\n      <Col xs=\"auto\">\r\n        <Button\r\n          variant={acquired ? \"danger\" : \"success\"}\r\n          onClick={() => {\r\n            if (acquired) {\r\n              undoClicked();\r\n            } else {\r\n              gotItClicked();\r\n            }\r\n          }}\r\n        >\r\n          {acquired ? \"Undo\" : \"Got It!\"}\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":16,"nodeType":"67","messageId":"68","endLine":2,"endColumn":22},{"ruleId":"65","severity":1,"message":"69","line":2,"column":40,"nodeType":"67","messageId":"68","endLine":2,"endColumn":49},{"ruleId":"65","severity":1,"message":"66","line":2,"column":16,"nodeType":"67","messageId":"68","endLine":2,"endColumn":22},{"ruleId":"65","severity":1,"message":"70","line":2,"column":35,"nodeType":"67","messageId":"68","endLine":2,"endColumn":38},{"ruleId":"65","severity":1,"message":"69","line":2,"column":40,"nodeType":"67","messageId":"68","endLine":2,"endColumn":49},{"ruleId":"65","severity":1,"message":"71","line":2,"column":51,"nodeType":"67","messageId":"68","endLine":2,"endColumn":54},{"ruleId":"65","severity":1,"message":"72","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":14},{"ruleId":"65","severity":1,"message":"73","line":1,"column":24,"nodeType":"67","messageId":"68","endLine":1,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":1,"column":40,"nodeType":"67","messageId":"68","endLine":1,"endColumn":49},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]