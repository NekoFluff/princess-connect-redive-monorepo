[{"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\index.tsx":"1","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\App.tsx":"3","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterListContainer.tsx":"4","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterCard.tsx":"5","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\api\\characterAPI.tsx":"6","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterItem.tsx":"7"},{"size":547,"mtime":1611453964819,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":295,"mtime":1611453488933,"results":"11","hashOfConfig":"9"},{"size":1369,"mtime":1611471068292,"results":"12","hashOfConfig":"9"},{"size":967,"mtime":1611470041938,"results":"13","hashOfConfig":"9"},{"size":206,"mtime":1611460773577,"results":"14","hashOfConfig":"9"},{"size":347,"mtime":1611462614172,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"hz7dup",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\index.tsx",[],["33","34"],"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\App.tsx",[],"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterListContainer.tsx",[],"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterCard.tsx",["35","36","37"],"import React from \"react\";\r\nimport { Card, Button, Container, Row, ListGroup, Col } from \"react-bootstrap\";\r\nimport CharacterItem from \"./CharacterItem\";\r\nimport { ItemList } from \"@pcr/shared\";\r\n\r\ntype CharacterCardProps = {\r\n  name: string;\r\n  rankUpItems: ItemList;\r\n};\r\n\r\nconst CharacterCard: React.FC<CharacterCardProps> = ({\r\n  name = \"Character Name\",\r\n  rankUpItems = {},\r\n}) => {\r\n  return (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n      <Card.Body>\r\n        <Card.Title>{name}</Card.Title>\r\n        {/* <Card.Text> */}\r\n        <Container>\r\n          {Object.entries(rankUpItems).map(([itemName, acquired]) => {\r\n            return <CharacterItem active={acquired} itemName={itemName} />;\r\n          })}\r\n        </Container>\r\n        {/* </Card.Text> */}\r\n        <Button variant=\"primary\">Go somewhere</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\api\\characterAPI.tsx",[],"C:\\Users\\alexn\\Projects\\princess-connect-redive-monorepo\\packages\\client\\src\\components\\CharacterItem.tsx",["38","39","40"],"import { Card, Button, Container, Row, ListGroup, Col } from \"react-bootstrap\";\r\n\r\nconst CharacterItem = ({ active = true, itemName = \"Item Name\" }) => {\r\n  return (\r\n    <Row>\r\n      <Col>{itemName}</Col>\r\n      <Col>\r\n        <Button>{active ? \"Disable\" : \"Enable\"}</Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":35,"nodeType":"47","messageId":"48","endLine":2,"endColumn":38},{"ruleId":"45","severity":1,"message":"49","line":2,"column":40,"nodeType":"47","messageId":"48","endLine":2,"endColumn":49},{"ruleId":"45","severity":1,"message":"50","line":2,"column":51,"nodeType":"47","messageId":"48","endLine":2,"endColumn":54},{"ruleId":"45","severity":1,"message":"51","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":14},{"ruleId":"45","severity":1,"message":"52","line":1,"column":24,"nodeType":"47","messageId":"48","endLine":1,"endColumn":33},{"ruleId":"45","severity":1,"message":"49","line":1,"column":40,"nodeType":"47","messageId":"48","endLine":1,"endColumn":49},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]